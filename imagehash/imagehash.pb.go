// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: imagehash.proto

package imagehash

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetHashRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	A             int32                  `protobuf:"varint,1,opt,name=a,proto3" json:"a,omitempty"`
	B             int32                  `protobuf:"varint,2,opt,name=b,proto3" json:"b,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHashRequest) Reset() {
	*x = GetHashRequest{}
	mi := &file_imagehash_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHashRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHashRequest) ProtoMessage() {}

func (x *GetHashRequest) ProtoReflect() protoreflect.Message {
	mi := &file_imagehash_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHashRequest.ProtoReflect.Descriptor instead.
func (*GetHashRequest) Descriptor() ([]byte, []int) {
	return file_imagehash_proto_rawDescGZIP(), []int{0}
}

func (x *GetHashRequest) GetA() int32 {
	if x != nil {
		return x.A
	}
	return 0
}

func (x *GetHashRequest) GetB() int32 {
	if x != nil {
		return x.B
	}
	return 0
}

type GetHashResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	C             int32                  `protobuf:"varint,1,opt,name=c,proto3" json:"c,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHashResponse) Reset() {
	*x = GetHashResponse{}
	mi := &file_imagehash_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHashResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHashResponse) ProtoMessage() {}

func (x *GetHashResponse) ProtoReflect() protoreflect.Message {
	mi := &file_imagehash_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHashResponse.ProtoReflect.Descriptor instead.
func (*GetHashResponse) Descriptor() ([]byte, []int) {
	return file_imagehash_proto_rawDescGZIP(), []int{1}
}

func (x *GetHashResponse) GetC() int32 {
	if x != nil {
		return x.C
	}
	return 0
}

var File_imagehash_proto protoreflect.FileDescriptor

const file_imagehash_proto_rawDesc = "" +
	"\n" +
	"\x0fimagehash.proto\x12\timagehash\",\n" +
	"\x0eGetHashRequest\x12\f\n" +
	"\x01a\x18\x01 \x01(\x05R\x01a\x12\f\n" +
	"\x01b\x18\x02 \x01(\x05R\x01b\"\x1f\n" +
	"\x0fGetHashResponse\x12\f\n" +
	"\x01c\x18\x01 \x01(\x05R\x01c2T\n" +
	"\x10ImagehashService\x12@\n" +
	"\aGetHash\x12\x19.imagehash.GetHashRequest\x1a\x1a.imagehash.GetHashResponseB+Z)github.com/btxdev/imagehash-svc/imagehashb\x06proto3"

var (
	file_imagehash_proto_rawDescOnce sync.Once
	file_imagehash_proto_rawDescData []byte
)

func file_imagehash_proto_rawDescGZIP() []byte {
	file_imagehash_proto_rawDescOnce.Do(func() {
		file_imagehash_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_imagehash_proto_rawDesc), len(file_imagehash_proto_rawDesc)))
	})
	return file_imagehash_proto_rawDescData
}

var file_imagehash_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_imagehash_proto_goTypes = []any{
	(*GetHashRequest)(nil),  // 0: imagehash.GetHashRequest
	(*GetHashResponse)(nil), // 1: imagehash.GetHashResponse
}
var file_imagehash_proto_depIdxs = []int32{
	0, // 0: imagehash.ImagehashService.GetHash:input_type -> imagehash.GetHashRequest
	1, // 1: imagehash.ImagehashService.GetHash:output_type -> imagehash.GetHashResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_imagehash_proto_init() }
func file_imagehash_proto_init() {
	if File_imagehash_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_imagehash_proto_rawDesc), len(file_imagehash_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_imagehash_proto_goTypes,
		DependencyIndexes: file_imagehash_proto_depIdxs,
		MessageInfos:      file_imagehash_proto_msgTypes,
	}.Build()
	File_imagehash_proto = out.File
	file_imagehash_proto_goTypes = nil
	file_imagehash_proto_depIdxs = nil
}
